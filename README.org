* これは何?

unicode #UAX11 において文字幅が曖昧(A)，つまり文脈に依存して文字幅が半角幅だったり全角幅だったりする文字と，いわゆる絵文字(#UTR 51) について，強制的に文字幅を =2= ，つまり全角幅にするよう修正したロケールデータと，それを生成するための ruby script です．

ちなみに，glibc <= 2.21 のロケールは Unicode 5.0 が用いられていますが，対応している絵文字が少ないので，glibc 2.24 の持つ =i18n=, =UTF-8= とUnicode 8.0のデータを用いて生成しています．

- [[EastAsianAmbiguous.txt][曖昧文字幅となっている文字の一覧]]
- [[file:EmojiData.txt][絵文字のうち，Unicode 8.0 で定義されている文字の一覧]]

使用に際しての責任は取りません/取れませんので，あらかじめご容赦下さい．

* なんでこんなものが必要なの?

ターミナルで生活していると，
- libc の =wcwidth= の返す値
- terminal 上で動作するアプリケーションが使う文字幅
- 実際のフォント
が揃っていないと絵文字とか曖昧文字幅が出てきたときに表示が崩れて悲しい気持になります．というわけで，文脈に依存せずに強制的に文字幅を =2= としておくことで，表示の崩れを防ごう，という事です．

* どう使うの?

以下，Debian の場合です．ロケールデータの置き場所や更新方法はお使いの環境に合わせて適宜修正して下さい．

1. make, ruby, wget を install して下さい
2. git clone した後に =make= すると， =unicode.org= と =glibc2.24= から，必要なファイルを download した後， =UTF-8-EAW-EMOJI-FULLWIDTH.gz= と =eaw_and_emoji.el= が生成されます．
3. ダウンロードされた =i18n= を =/usr/share/i18n/locales= 以下に copy します．
4. 生成した =UTF-8-EAW-EMOJI-FULLWIDTH.gz= を =/usr/share/i18n/charmaps= に copy します．
5. =/etc/locale.gen= 中の =ja_JP.UTF-8= の行を
   #+BEGIN_SRC conf
   ja_JP.UTF-8 UTF-8EAW-EMOJI-FULLWIDTH
   #+END_SRC
   に変更します．
6. =locale-gen= を唱えます．
7. emacs の =load-path= が通った所に =eaw_and_emoji.el= を copy して，
   #+BEGIN_SRC emacs-lisp
   (require 'eaw_and_emoji)
   #+END_SRC
   として下さい．
8. mlterm 用での表示用に [[file:mlterm_main_completioin][mlterm_main_completion]] ファイルを用意してあります．
   =~/.mltem/main= にコピーしてお使い下さい．
   =aafont= の completion も用意した方が良いのかもしれません．
* ライセンス

  - MIT/X11: generate.rb
  - ロケールデータそのものは Unicode, Inc. によって作成されています．
    - 生成に使ったデータ(i18n, UTF-8)は glibc 由来です．

* 参考文献

- [[https://github.com/hamano/locale-eaw][hamano/locale-eaw]]
- [[https://github.com/fumiyas/wcwidth-cjk][fumiyas/wcwidth-cjk]]
